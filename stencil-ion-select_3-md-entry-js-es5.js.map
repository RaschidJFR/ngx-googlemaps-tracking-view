{"version":3,"mappings":"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","names":["onChange","mutation","childList","subtree","mutationList","i","newOption","Array","hostRef","selectIds","value","undefined","overlay","console","selectInterface","popover","role","text","handler","actionSheetButtons","type","label","checked","disabled","interfaceOptions","mode","popoverOpts","Object","component","cssClass","event","componentProps","header","subHeader","message","options","_overlays_998692a2_js__WEBPACK_IMPORTED_MODULE_4__","actionSheetOpts","buttons","labelText","inputType","alertOpts","inputs","placeholder","name","isExpanded","el","selectText","addPlaceholderClass","parseValue","_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__","onClick","part","onFocus","onBlur","ref","map","filter","join","selectOpt","Select","ios","md","selectOptionIds","id","SelectOption","option","SelectPopover"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-select_3-md.entry.js"],"sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-d8b49b57.js';\nimport './hardware-back-button-784b7e3c.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-998692a2.js';\nimport { h as hostContext } from './theme-c2dc54d9.js';\n\nconst watchForOptions = (containerEl, tagName, onChange) => {\n    const mutation = new MutationObserver(mutationList => {\n        onChange(getSelectedOption(mutationList, tagName));\n    });\n    mutation.observe(containerEl, {\n        childList: true,\n        subtree: true\n    });\n    return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n    let newOption;\n    mutationList.forEach(mut => {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n        }\n    });\n    return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n    if (el.nodeType !== 1) {\n        return undefined;\n    }\n    const options = (el.tagName === tagName.toUpperCase())\n        ? [el]\n        : Array.from(el.querySelectorAll(tagName));\n    return options.find((o) => o.value === el.value);\n};\n\nconst selectIosCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:20px}.select-icon{width:12px;height:18px}\";\n\nconst selectMdCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:16px}.select-icon{width:19px;height:19px}\";\n\nconst Select = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.didInit = false;\n        this.isExpanded = false;\n        /**\n         * If `true`, the user cannot interact with the select.\n         */\n        this.disabled = false;\n        /**\n         * The text to display on the cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the ok button.\n         */\n        this.okText = 'OK';\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the select can accept multiple values.\n         */\n        this.multiple = false;\n        /**\n         * The interface the select should use: `action-sheet`, `popover` or `alert`.\n         */\n        this.interface = 'alert';\n        /**\n         * Any additional options that the `alert`, `action-sheet` or `popover` interface\n         * can take. See the [AlertController API docs](../../alert/AlertController/#create), the\n         * [ActionSheetController API docs](../../action-sheet/ActionSheetController/#create) and the\n         * [PopoverController API docs](../../popover/PopoverController/#create) for the\n         * create options for each interface.\n         */\n        this.interfaceOptions = {};\n        this.onClick = (ev) => {\n            this.setFocus();\n            this.open(ev);\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    valueChanged() {\n        this.emitStyle();\n        if (this.didInit) {\n            this.ionChange.emit({\n                value: this.value,\n            });\n        }\n    }\n    async connectedCallback() {\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n        });\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n    }\n    componentDidLoad() {\n        this.didInit = true;\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        const overlay = this.overlay = await this.createOverlay(event);\n        this.isExpanded = true;\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.setFocus();\n        });\n        await overlay.present();\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = (this.multiple ? 'checkbox' : 'radio');\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map(option => {\n            const value = getOptionValue(option);\n            return {\n                role: (isOptionSelected(value, selectValue, this.compareWith) ? 'selected' : ''),\n                text: option.textContent,\n                handler: () => {\n                    this.value = value;\n                }\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            }\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        return data.map(o => {\n            const value = getOptionValue(o);\n            return {\n                type: inputType,\n                label: o.textContent || '',\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: o.disabled\n            };\n        });\n    }\n    createPopoverOptions(data, selectValue) {\n        return data.map(o => {\n            const value = getOptionValue(o);\n            return {\n                text: o.textContent || '',\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: o.disabled,\n                handler: () => {\n                    this.value = value;\n                    this.close();\n                }\n            };\n        });\n    }\n    async openPopover(ev) {\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const value = this.value;\n        const popoverOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value)\n            } });\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const label = this.getLabel();\n        const labelText = (label) ? label.textContent : null;\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    }\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.value = selectedValues;\n                    }\n                }\n            ], cssClass: ['select-alert', interfaceOptions.cssClass,\n                (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        // TODO check !this.overlay || !this.isFocus()\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    getLabel() {\n        return findItemLabel(this.el);\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'select': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'interactive-disabled': this.disabled,\n            'select-disabled': this.disabled\n        });\n    }\n    render() {\n        const { placeholder, name, disabled, isExpanded, value, el } = this;\n        const mode = getIonMode(this);\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        let addPlaceholderClass = false;\n        let selectText = this.getText();\n        if (selectText === '' && placeholder != null) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(Host, { onClick: this.onClick, role: \"combobox\", \"aria-haspopup\": \"dialog\", \"aria-disabled\": disabled ? 'true' : null, \"aria-expanded\": `${isExpanded}`, \"aria-labelledby\": labelId, class: {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'select-disabled': disabled,\n            } }, h(\"div\", { class: selectTextClasses, part: textPart }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\", part: \"icon\" }, h(\"div\", { class: \"select-icon-inner\", part: \"icon-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: (btnEl => this.buttonEl = btnEl) })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"placeholder\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n    if (currentValue === undefined) {\n        return false;\n    }\n    if (Array.isArray(currentValue)) {\n        return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n    }\n    else {\n        return compareOptions(currentValue, compareValue, compareWith);\n    }\n};\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return (value === undefined)\n        ? el.textContent || ''\n        : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n    if (typeof compareWith === 'function') {\n        return compareWith(currentValue, compareValue);\n    }\n    else if (typeof compareWith === 'string') {\n        return currentValue[compareWith] === compareValue[compareWith];\n    }\n    else {\n        return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n    }\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map(v => textForValue(opts, v, compareWith))\n            .filter(opt => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find(opt => {\n        return compareOptions(getOptionValue(opt), value, compareWith);\n    });\n    return selectOpt\n        ? selectOpt.textContent\n        : null;\n};\nlet selectIds = 0;\nSelect.style = {\n    /*STENCIL:MODE:ios*/ ios: selectIosCss,\n    /*STENCIL:MODE:md*/ md: selectMdCss\n};\n\nconst selectOptionCss = \":host{display:none}\";\n\nconst SelectOption = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        /**\n         * If `true`, the user cannot interact with the select option.\n         */\n        this.disabled = false;\n    }\n    render() {\n        return (h(Host, { role: \"option\", id: this.inputId, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n};\nlet selectOptionIds = 0;\nSelectOption.style = selectOptionCss;\n\nconst selectPopoverCss = \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h ion-list-header.sc-ion-select-popover,.sc-ion-select-popover-h ion-label.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nconst SelectPopover = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Array of options for the popover */\n        this.options = [];\n    }\n    onSelect(ev) {\n        const option = this.options.find(o => o.value === ev.target.value);\n        if (option) {\n            safeCall(option.handler);\n        }\n    }\n    render() {\n        const checkedOption = this.options.find(o => o.checked);\n        const checkedValue = checkedOption ? checkedOption.value : undefined;\n        return (h(Host, { class: getIonMode(this) }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) &&\n            h(\"ion-item\", null, h(\"ion-label\", { class: \"ion-text-wrap\" }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", { value: checkedValue }, this.options.map(option => h(\"ion-item\", null, h(\"ion-label\", null, option.text), h(\"ion-radio\", { value: option.value, disabled: option.disabled })))))));\n    }\n};\nSelectPopover.style = selectPopoverCss;\n\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };\n"]}