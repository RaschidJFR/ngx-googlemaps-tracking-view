{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAEA;;AAEA;AACA;AAAA;;AACQ,iEAAgB,IAAhB,EAAgBA,OAAhB;AACR;AACA,yBAAuBC,iFAAgC;AACvDC;AADuD,WAAhC,CAAvB;AAGA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,gCAA8B,uDAAW,IAAX,EAAW,gBAAX,EAAW,CAAX,CAA9B;AACA;;AApBA;AAAA;AAAA,iBAqBA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AAAA,iBA0BA;AACA;AACA;AA5BA;AAAA;AAAA,iBA6BA;AACA,6BAAyB,yDAAGC,EAAH,CAAzB;AACA;AACA;AAhCA;AAAA;AAAA,iBAiCA;AACA,iCAA6B,yDAAGA,EAAH,IAAG,IAAhC,EAAgC;AAChC;AACA;AACA;AArCA;AAAA;AAAA,iBAsCA;AACA;AACAA;AACAA;AACA;;AACA;AACA;AACA;AACA;AA9CA;AAAA;AAAA,iBA+CA;AAAA;;AACA,uBAAqB,8DAAU,IAAV,CAArB;AACA,mBAAgB,uDAAEC,iDAAF,EAAM;AAAIC,4BAAJ;AAAI,6DAC1BC,IAD0B,EAC1B,IAD0B,2BAE1B,eAF0B,EAE1B,aAF0B,2BAG1B,sBAH0B,EAG1B,cAH0B;AAAJ,aAAN,CAAhB;AAKA;AAtDA;;AAAA;AAAA;;AAwDAC;AACA;AAAAC,2BADA;;AAEA;AAAAC;AAFA;;;","names":["hostRef","_index_e44ebcc6_js__WEBPACK_IMPORTED_MODULE_3__","disableScroll","ev","_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__","tabindex","mode","Backdrop","ios","md"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-backdrop-ios.entry.js"],"sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { n as now } from './helpers-d8b49b57.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\n\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst Backdrop = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastClick = -10000;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({\n            disableScroll: true\n        });\n        /**\n         * If `true`, the backdrop will be visible.\n         */\n        this.visible = true;\n        /**\n         * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n         */\n        this.tappable = true;\n        /**\n         * If `true`, the backdrop will stop propagation on tap.\n         */\n        this.stopPropagation = true;\n        this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n    }\n    connectedCallback() {\n        if (this.stopPropagation) {\n            this.blocker.block();\n        }\n    }\n    disconnectedCallback() {\n        this.blocker.unblock();\n    }\n    onTouchStart(ev) {\n        this.lastClick = now(ev);\n        this.emitTap(ev);\n    }\n    onMouseDown(ev) {\n        if (this.lastClick < now(ev) - 2500) {\n            this.emitTap(ev);\n        }\n    }\n    emitTap(ev) {\n        if (this.stopPropagation) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        if (this.tappable) {\n            this.ionBackdropTap.emit();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { tabindex: \"-1\", class: {\n                [mode]: true,\n                'backdrop-hide': !this.visible,\n                'backdrop-no-tappable': !this.tappable,\n            } }));\n    }\n};\nBackdrop.style = {\n    /*STENCIL:MODE:ios*/ ios: backdropIosCss,\n    /*STENCIL:MODE:md*/ md: backdropMdCss\n};\n\nexport { Backdrop as ion_backdrop };\n"]}