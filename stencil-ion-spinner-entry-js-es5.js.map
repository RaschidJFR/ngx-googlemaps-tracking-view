{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AAEA;AACA;AAAA;;AACQ,iEAAgB,IAAhB,EAAgBA,OAAhB;AACR;AACA;AACA;;AACA;AACA;;AAPA;AAAA;AAAA,iBAQA;AACA,2CAAyCC,6DAAU,SAAV,CAAzC;;AACA,uBAAqB,8DAAU,IAAV,CAArB;;AACA;AACA;AACA;;AACA;AACA;AAfA;AAAA;AAAA,iBAgBA;AAAA;;AACA;AACA,uBAAqB,8DAAUC,IAAV,CAArB;AACA;AACA,0BAAwBC,4DAAQC,WAAR,KAAyBD,iEAAjD;AACA;AACA;;AACA;AACA,8BAA4BE,mBAA5B,EAAiDA,GAAjD,EAAiD;AACjDC;AACA;AACA,aAJA,MAKA;AACA,+BAA4BD,kBAA5B,EAA+CA,IAA/C,EAA+C;AAC/CC;AACA;AACA;;AACA,mBAAgB,uDAAEC,iDAAF,EAAM;AAAI,uDAAuC,uDAAkBL,UAAlB,CAAvC,yDAA0EM,IAA1E,EAA0E,IAA1E,qDAAoGJ,WAApG,GAAgH,IAAhH,mCAAgH,gBAAhH,EAAgH,iBAA6CH,oEAAiB,UAAjB,CAA7J,mBAAJ;AAAgMQ,iCAAhM;AAAgMC;AAAuDC;AAAvD,kBAA4F;AAA5R,aAAN,EAAwSL,IAAxS,CAAhB;AACA;AAlCA;;AAAA;AAAA;;AAoCA;AACA;AACAM;AACA,eAAY,uDAAC,KAAD,EAAC;AAAUC,8CAAV;AAAUH;AAAV,SAAD,EAAsE,uDAAC,QAAD,EAAC;AAAaI,yDAAb;AAAaC,qBAAb;AAAaC,qBAAb;AAAaC,mBAAb;AAAaP;AAAqHC;AAArH,cAA0J;AAAvK,SAAD,CAAtE,CAAZ;AACA,OAJA;;AAKA;AACA;AACAC;AACA,eAAY,uDAAC,KAAD,EAAC;AAAUC,8CAAV;AAAUH;AAAV,SAAD,EAAsE,uDAAC,MAAD,EAAC;AAAWI,uCAAX;AAAWI,qBAAX;AAAWC;AAAX,SAAD,CAAtE,CAAZ;AACA,OAJA;;AAKAC;;;","names":["hostRef","_ionic_global_a175fa73_js__WEBPACK_IMPORTED_MODULE_1__","self","_spinner_configs_c78e170e_js__WEBPACK_IMPORTED_MODULE_3__","spinnerName","i","svgs","_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__","mode","role","style","animationDuration","data","viewBox","transform","cx","cy","r","y1","y2","Spinner"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\n\nconst Spinner = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the spinner's animation will be paused.\n         */\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return (mode === 'ios') ? 'lines' : 'circular';\n    }\n    render() {\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n        const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(self.color)), { [mode]: true, [`spinner-${spinnerName}`]: true, 'spinner-paused': !!self.paused || config.getBoolean('_testing') }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\nSpinner.style = spinnerCss;\n\nexport { Spinner as ion_spinner };\n"]}